@using System.Web;
@model Waffle.Models.Components.Pagination
@{
    var nvc = HttpUtility.ParseQueryString(Context.Request.QueryString.Value ?? string.Empty);
    nvc["current"] = (Model.Current - 1).ToString();
    var prevUrl = $"?{nvc.ToString()}";
    nvc["current"] = (Model.Current + 1).ToString();
    var nextUrl = $"?{nvc.ToString()}";
}

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-end">
        @if (Model.HasPrevPage)
        {
            <li class="page-item">
                <a class="page-link" href="@prevUrl" aria-label="Previous">
                    <i class="fa-solid fa-angle-left"></i>
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link" aria-label="Previous">
                    <i class="fa-solid fa-angle-left"></i>
                </span>
            </li>
        }
        <li class="page-item active" aria-current="page">
            <span class="page-link">@Model.Current</span>
        </li>
        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" href="@nextUrl" aria-label="Next">
                    <i class="fa-solid fa-angle-right"></i>
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link" aria-label="Next">
                    <i class="fa-solid fa-angle-right"></i>
                </span>
            </li>
        }
    </ul>
</nav>